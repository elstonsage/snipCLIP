package snpclip;

import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.SwingUtilities;
import javax.swing.JDialog;
public class MapLocationDialog extends javax.swing.JDialog {
    DefaultListModel RLM = new DefaultListModel();
    DefaultListModel ROLM = new DefaultListModel();
    DefaultListModel SLM = new DefaultListModel();
    DefaultListModel SOLM = new DefaultListModel();

    /** Creates new form LocationDialog */
    public MapLocationDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
            private void initComponents() {

                jPanel1 = new javax.swing.JPanel();
                jScrollPane1 = new javax.swing.JScrollPane();
                RegionList = new javax.swing.JList();
                RegionLabel1 = new javax.swing.JLabel();
                jScrollPane2 = new javax.swing.JScrollPane();
                SNPList = new javax.swing.JList();
                SNPLabel1 = new javax.swing.JLabel();
                RegionAdd = new javax.swing.JButton();
                jScrollPane3 = new javax.swing.JScrollPane();
                RegionOList = new javax.swing.JList();
                jScrollPane4 = new javax.swing.JScrollPane();
                SNPOList = new javax.swing.JList();
                SNPLabel2 = new javax.swing.JLabel();
                RegionLabel2 = new javax.swing.JLabel();
                RegionAddAll = new javax.swing.JButton();
                RegionRemoveAll = new javax.swing.JButton();
                RegionRemove = new javax.swing.JButton();
                SNPAdd = new javax.swing.JButton();
                SNPAddAll = new javax.swing.JButton();
                SNPRemove = new javax.swing.JButton();
                SNPRemoveAll = new javax.swing.JButton();
                LocationDetailsButton = new javax.swing.JButton();
                OKButton = new javax.swing.JButton();
                CancelButton = new javax.swing.JButton();

                setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
                setTitle("Map Location Dialog");

                jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Available Regions and SNPs"));

                RegionList.setModel(RLM);
                jScrollPane1.setViewportView(RegionList);

                RegionLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                RegionLabel1.setText("Regions");

                SNPList.setModel(SLM
                );
                jScrollPane2.setViewportView(SNPList);

                SNPLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                SNPLabel1.setText("SNPs");

                RegionAdd.setText(">");
                RegionAdd.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        RegionAddActionPerformed(evt);
                    }
                });

                RegionOList.setModel(ROLM);
                RegionOList.setMinimumSize(new java.awt.Dimension(100, 200));
                RegionOList.setPreferredSize(new java.awt.Dimension(100, 200));
                jScrollPane3.setViewportView(RegionOList);

                SNPOList.setModel(SOLM);
                SNPOList.setMaximumSize(new java.awt.Dimension(100, 200));
                SNPOList.setMinimumSize(new java.awt.Dimension(100, 200));
                SNPOList.setPreferredSize(new java.awt.Dimension(100, 200));
                jScrollPane4.setViewportView(SNPOList);

                SNPLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                SNPLabel2.setText("SNPs");

                RegionLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                RegionLabel2.setText("Regions");

                RegionAddAll.setText(">>");
                RegionAddAll.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        RegionAddAllActionPerformed(evt);
                    }
                });

                RegionRemoveAll.setText("<<");
                RegionRemoveAll.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        RegionRemoveAllActionPerformed(evt);
                    }
                });

                RegionRemove.setText("<");
                RegionRemove.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        RegionRemoveActionPerformed(evt);
                    }
                });

                SNPAdd.setText(">");
                SNPAdd.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        SNPAddActionPerformed(evt);
                    }
                });

                SNPAddAll.setText(">>");
                SNPAddAll.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        SNPAddAllActionPerformed(evt);
                    }
                });

                SNPRemove.setText("<");
                SNPRemove.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        SNPRemoveActionPerformed(evt);
                    }
                });

                SNPRemoveAll.setText("<<");
                SNPRemoveAll.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        SNPRemoveAllActionPerformed(evt);
                    }
                });

                LocationDetailsButton.setText("Location Details");
                LocationDetailsButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        LocationDetailsButtonActionPerformed(evt);
                    }
                });

                javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
                jPanel1.setLayout(jPanel1Layout);
                jPanel1Layout.setHorizontalGroup(
                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                                    .addComponent(SNPLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SNPRemove, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                                    .addComponent(SNPRemoveAll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(SNPAddAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(SNPAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                                    .addComponent(RegionAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                                    .addComponent(RegionAddAll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(RegionRemove, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                                    .addComponent(RegionRemoveAll, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(RegionLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RegionLabel2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                                    .addComponent(SNPLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LocationDetailsButton))))
                );
                jPanel1Layout.setVerticalGroup(
                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RegionLabel1)
                            .addComponent(RegionLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LocationDetailsButton)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(RegionAdd)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(RegionAddAll)
                                        .addGap(18, 18, 18)
                                        .addComponent(RegionRemove)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(RegionRemoveAll))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(SNPLabel2)
                                            .addComponent(SNPLabel1))
                                        .addGap(7, 7, 7)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                            .addComponent(jScrollPane2)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(41, 41, 41)
                                        .addComponent(SNPAdd)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(SNPAddAll)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(SNPRemove)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(SNPRemoveAll)))))
                        .addContainerGap(23, Short.MAX_VALUE))
                );

                OKButton.setText("OK");
                OKButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        OKButtonActionPerformed(evt);
                    }
                });

                CancelButton.setText("Cancel");
                CancelButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        CancelButtonActionPerformed(evt);
                    }
                });

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(649, Short.MAX_VALUE)
                        .addComponent(OKButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CancelButton)
                        .addContainerGap())
                );
                layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CancelButton)
                            .addComponent(OKButton))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                pack();
    }// </editor-fold>// </editor-fold>//GEN-END:initComponents

    private void RegionAddActionPerformed(java.awt.event.ActionEvent evt) {
        Vector Track = new Vector();
        for(int i = 0; i < RegionList.getSelectedValues().length; i++)
        {
          if(((DefaultListModel)RegionOList.getModel()).indexOf(RegionList.getSelectedValues()[i])<0)
          {
             ((DefaultListModel)RegionOList.getModel()).addElement(RegionList.getSelectedValues()[i]);
             Track.add(RegionList.getSelectedValues()[i]);
          }
        }
        for(int i = 0; i < Track.size(); i++)
        {
            ((DefaultListModel)RegionList.getModel()).removeElement(Track.get(i));
        }
        Track = null;
    }

    private void RegionRemoveActionPerformed(java.awt.event.ActionEvent evt) {
        Vector Track = new Vector();
        for(int i = 0; i < RegionOList.getSelectedValues().length; i++)
        {
          if(((DefaultListModel)RegionList.getModel()).indexOf(RegionOList.getSelectedValues()[i])<0)
          {
             ((DefaultListModel)RegionList.getModel()).addElement(RegionOList.getSelectedValues()[i]);
             Track.add(RegionOList.getSelectedValues()[i]);
          }
        }
        for(int i = 0; i < Track.size(); i++)
        {
            ((DefaultListModel)RegionOList.getModel()).removeElement(Track.get(i));
        }
        Track = null;
    }

    private void SNPAddActionPerformed(java.awt.event.ActionEvent evt) {
        Vector Track = new Vector();
        for(int i = 0; i < SNPList.getSelectedValues().length; i++)
        {
          if(((DefaultListModel)SNPOList.getModel()).indexOf(SNPList.getSelectedValues()[i])<0)
          {
             ((DefaultListModel)SNPOList.getModel()).addElement(SNPList.getSelectedValues()[i]);
             Track.add(SNPList.getSelectedValues()[i]);
          }
        }
        for(int i = 0; i < Track.size(); i++)
        {
            ((DefaultListModel)SNPList.getModel()).removeElement(Track.get(i));
        }
        Track = null;
    }

    private void RegionAddAllActionPerformed(java.awt.event.ActionEvent evt) {
        for(int i = 0; i < RegionList.getModel().getSize(); i++)
        {
          if(((DefaultListModel)RegionOList.getModel()).indexOf(RegionList.getModel().getElementAt(i))<0)
          {
             ((DefaultListModel)RegionOList.getModel()).addElement(RegionList.getModel().getElementAt(i));
          }
        }
        ((DefaultListModel)RegionList.getModel()).removeAllElements();
    }

    private void RegionRemoveAllActionPerformed(java.awt.event.ActionEvent evt) {
        for(int i = 0; i < RegionOList.getModel().getSize(); i++)
        {
          if(((DefaultListModel)RegionList.getModel()).indexOf(RegionOList.getModel().getElementAt(i))<0)
          {
             ((DefaultListModel)RegionList.getModel()).addElement(RegionOList.getModel().getElementAt(i));
          }
        }
        ((DefaultListModel)RegionOList.getModel()).removeAllElements();
    }

    private void SNPAddAllActionPerformed(java.awt.event.ActionEvent evt) {
         for(int i = 0; i < SNPList.getModel().getSize(); i++)
         {
           if(((DefaultListModel)SNPOList.getModel()).indexOf(SNPList.getModel().getElementAt(i))<0)
           {
              ((DefaultListModel)SNPOList.getModel()).addElement(SNPList.getModel().getElementAt(i));
           }
         }
         ((DefaultListModel)SNPList.getModel()).removeAllElements();
    }

    private void SNPRemoveAllActionPerformed(java.awt.event.ActionEvent evt) {
         for(int i = 0; i < SNPOList.getModel().getSize(); i++)
         {
           if(((DefaultListModel)SNPList.getModel()).indexOf(SNPOList.getModel().getElementAt(i))<0)
           {
              ((DefaultListModel)SNPList.getModel()).addElement(SNPOList.getModel().getElementAt(i));
           }
         }
         ((DefaultListModel)SNPOList.getModel()).removeAllElements();
    }

    private void SNPRemoveActionPerformed(java.awt.event.ActionEvent evt) {
         Vector Track = new Vector();
         for(int i = 0; i < SNPOList.getSelectedValues().length; i++)
         {
           if(((DefaultListModel)SNPList.getModel()).indexOf(SNPOList.getSelectedValues()[i])<0)
           {
              ((DefaultListModel)SNPList.getModel()).addElement(SNPOList.getSelectedValues()[i]);
              Track.add(SNPOList.getSelectedValues()[i]);
           }
         }
         for(int i = 0; i < Track.size(); i++)
         {
             ((DefaultListModel)SNPOList.getModel()).removeElement(Track.get(i));
         }
         Track = null;
    }

    private void OKButtonActionPerformed(java.awt.event.ActionEvent evt) {
        this.setVisible(false);
    }

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {
        this.setVisible(false);
}

    private void LocationDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {
        Runnable r = new Runnable()
        {
            public void run()
            {
                if(RegionOList.getSelectedIndices().length == 0)
                {
                    ToManyRegionsSelected D = new ToManyRegionsSelected(MainFrame.mainFrame1,true);
                    D.jLabel1.setText("Please Select One Region");
                    D.pack();
                    D.setLocationRelativeTo(MainFrame.mainFrame1);
                    D.setVisible(true);

                }
                if(RegionOList.getSelectedIndices().length > 1)
                {
                    ToManyRegionsSelected D = new ToManyRegionsSelected(MainFrame.mainFrame1,true);
                    D.pack();
                    D.setLocationRelativeTo(MainFrame.mainFrame1);
                    D.setVisible(true);

                }
                else
                {
                    int Index = MainFrame.mainFrame1.LocationIndexs.indexOf(RegionOList.getSelectedValue().toString());
                    LocationDetailsDialog LDD;
                    if(Index < 0)
                    {
                        MainFrame.mainFrame1.LocationIndexs.add(RegionOList.getSelectedValue().toString());
                        LocationFilter LF = new LocationFilter(RegionOList.getSelectedValue().toString());
                        LF.StartIndex = 0;
                        LF.EndIndex = 0;
                        MainFrame.mainFrame1.LocationFilters.add(LF);
                        int SMIndex = MainFrame.mainFrame1.SM.Region.indexOf(RegionOList.getSelectedValue().toString());
                        MapRegion MR = (MapRegion)MainFrame.mainFrame1.SM.Regions.get(SMIndex);
                        LDD = new LocationDetailsDialog(MainFrame.mainFrame1, true, MainFrame.mainFrame1.LocationIndexs.indexOf(RegionOList.getSelectedValue().toString()));
                        LDD.jLabel1.setText(RegionOList.getSelectedValue().toString());
                        for(int i = 0; i < MR.MarkerDistance.size(); i++)
                        {
                            LDD.StartComboBox.addItem(MR.MarkerDistance.get(i));
                            LDD.EndComboBox.addItem(MR.MarkerDistance.get(i));
                        }
                        MainFrame.mainFrame1.LDDs.add(LDD);
                    }
                    else
                    {
                        LDD = (LocationDetailsDialog)MainFrame.mainFrame1.LDDs.get(MainFrame.mainFrame1.LocationIndexs.indexOf(RegionOList.getSelectedValue().toString()));
                    }
                    LDD.setLocationRelativeTo(MainFrame.mainFrame1);
                    LDD.pack();
                    LDD.setVisible(true);
                }
            }
        };
        SwingUtilities.invokeLater(r);

    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MapLocationDialog dialog = new MapLocationDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton CancelButton;
    public javax.swing.JButton LocationDetailsButton;
    private javax.swing.JButton OKButton;
    private javax.swing.JButton RegionAdd;
    private javax.swing.JButton RegionAddAll;
    private javax.swing.JLabel RegionLabel1;
    private javax.swing.JLabel RegionLabel2;
    public javax.swing.JList RegionList;
    public javax.swing.JList RegionOList;
    private javax.swing.JButton RegionRemove;
    private javax.swing.JButton RegionRemoveAll;
    private javax.swing.JButton SNPAdd;
    private javax.swing.JButton SNPAddAll;
    private javax.swing.JLabel SNPLabel1;
    private javax.swing.JLabel SNPLabel2;
    public javax.swing.JList SNPList;
    public javax.swing.JList SNPOList;
    private javax.swing.JButton SNPRemove;
    private javax.swing.JButton SNPRemoveAll;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration

}
